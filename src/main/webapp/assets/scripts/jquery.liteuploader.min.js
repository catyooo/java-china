/* liteUploader v3.3.2 | https://github.com/burt202/lite-uploader | Aaron Burtnyk (http://www.burtdev.net) */
!function(t){"object"==typeof module&&"object"==typeof module.exports?module.exports=t(require("jquery")):t($)}(function(t){function e(t,e,i){this.options=this._applyDefaults(t),this._getFiles=e,this._triggerEvent=i,this.xhrs=[]}return t.fn.liteUploader=function(i){return this.each(function(){var r=function(){return t(this).get(0).files}.bind(this);i.ref=i.ref||t(this).attr("name"),t.data(this,"liteUploader",new e(i,r,t(this).trigger.bind(t(this))))})},e.prototype={_applyDefaults:function(e){return t.extend({script:null,ref:null,rules:{},params:{},headers:{},singleFileUploads:!1,beforeRequest:function(t,e){return Promise.resolve(e)}},e)},_init:function(t){if(t=t||this._getFiles(),t&&t.length){var e=this._validateOptions();e||(e=this._validateFiles(t)),e?this._triggerEvent("lu:errors",[e]):(this._triggerEvent("lu:start",t),this._startUploadWithFiles(t))}},_startUploadWithFiles:function(t){if(this.options.singleFileUploads)for(var e=0;e<t.length;e++)this._beforeUpload([t[e]]);else this._beforeUpload(t)},_beforeUpload:function(t){return this._triggerEvent("lu:before",t),this.options.beforeRequest(t,this._collateFormData(t)).then(this._performUpload.bind(this))},_validateOptions:function(){var t=["script","ref"],e=t.reduce(function(t,e){return this.options[e]||t.push({type:e+"Required"}),t}.bind(this),[]);return e.length?[{name:"_options",errors:e}]:null},_validateFiles:function(t){for(var e=[],i=0;i<t.length;i++){var r=this._findErrorsForFile(t[i]);r.length&&e.push({name:t[i].name,errors:r})}return e.length?e:null},_findErrorsForFile:function(t){return Object.keys(this.options.rules).reduce(function(e,i){var r=this.options.rules[i];return"allowedFileTypes"===i&&r&&!this._isAllowedFileType(r,t.type)&&e.push({type:"type",rule:r,given:t.type}),"maxSize"===i&&r&&t.size>r&&e.push({type:"size",rule:r,given:t.size}),e}.bind(this),[])},_isAllowedFileType:function(t,e){var i=t.split(","),r=/([a-z]+)\/\*$/;return-1!==i.indexOf(e)?!0:i.reduce(function(t,i){if(t)return t;var n=i.match(r)||[];return n[1]===e.split("/")[0]},!1)},_getFormDataObject:function(){return new FormData},_collateFormData:function(t){var e=this._getFormDataObject();for(var i in this.options.params)e.append(i,this.options.params[i]);for(var r=0;r<t.length;r++)e.append(this.options.ref,t[r]);return e},_getXmlHttpRequestObject:function(){return new XMLHttpRequest},_buildXhrObject:function(){var t=this._getXmlHttpRequestObject();return t.upload.addEventListener("progress",this._onXHRProgress.bind(this),!1),this.xhrs.push(t),t},_performUpload:function(e){t.ajax({xhr:this._buildXhrObject.bind(this),url:this.options.script,type:"POST",data:e,headers:this.options.headers,processData:!1,contentType:!1}).done(this._onXHRSuccess.bind(this)).fail(this._onXHRFailure.bind(this))},_onXHRProgress:function(t){t.lengthComputable&&this._triggerEvent("lu:progress",Math.floor(t.loaded/t.total*100))},_onXHRSuccess:function(t){this._triggerEvent("lu:success",t)},_onXHRFailure:function(t){this._triggerEvent("lu:fail",t)},startUpload:function(t){this._init(t)},addParam:function(t,e){this.options.params[t]=e},cancelUpload:function(){this.xhrs.forEach(function(t){t.abort()}),this._triggerEvent("lu:cancelled")}},e});